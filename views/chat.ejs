<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>聊天室</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        h2 {
            text-align: center;
        }

        #chat {
            height: 300px;
            overflow-y: scroll;
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }

        #messageInput {
            width: 70%;
            padding: 5px;
            font-size: 16px;
        }

        #sendButton {
            padding: 5px 10px;
            font-size: 16px;
        }

        form {
            margin-bottom: 10px;
        }

        button {
            padding: 5px 10px;
            font-size: 16px;
        }
    </style>
</head>

<body>
    <h2>聊天室</h2>
    <div id="chat"></div>
    <input type="text" id="messageInput" placeholder="輸入訊息">
    <button id="sendButton">Send</button>

    <form action="/api/info" method="post">
        <button type="submit">個人資訊</button>
    </form>
    <form action="/api/logout" method="get">
        <button type="submit">登出</button>
    </form>
</body>
<!-- 需引入io至客戶端使用 -->
<script src="/socket.io/socket.io.js"></script>
<!-- 操作io -->
<script>
    // 連接至 Socket.IO 伺服器 全域使用
    const socket = io();

    // 使用者資訊
    const userInfo = '<%= user_info %>';

    // 取得元素
    const chatDiv = document.getElementById('chat');
    const messageInput = document.getElementById('messageInput');
    const sendButton = document.getElementById('sendButton');

    // 發送訊息
    function sendMessage() {
        const message = `${userInfo}：${messageInput.value}` ;

        if (message) {
            socket.emit('chat message', message); // 發送 'chat message' 事件到伺服器
            messageInput.value = ''; // 清空輸入框
        }
    }

    // 監聽 'chat message' 事件，接收伺服器傳來的訊息
    socket.on('chat message', (message) => {
        const messageElement = document.createElement('p');
        messageElement.innerText = message;
        chatDiv.appendChild(messageElement);
        chatDiv.scrollTop = chatDiv.scrollHeight; // 捲動至最底部
    });

    // 當按下送出按鈕時發送訊息
    sendButton.addEventListener('click', sendMessage);

    // 當按下 Enter 鍵時發送訊息
    messageInput.addEventListener('keydown', (event) => {
        if (event.key === 'Enter') {
            sendMessage();
        }
    });
</script>

</html>